- hosts: all
  gather_facts: False
  any_errors_fatal: True
  become: True
  tasks:
    - name: Install prerequisite packages
      yum:
        state: present
        name: "{{ packages }}"
      vars:
        packages:
          - curl
          - ca-certificates
          - ntp
    - name: Enable ntpd
      systemd:
        name: ntpd
        enabled: True
        state: started
    - name: Dactivate firewalld
      systemd:
        name: firewalld
        enabled: False
        state: stopped

- hosts: node
  become: True
  gather_facts: False
  any_errors_fatal: True
  tags:
    - docker
  tasks:
    - name: Add Docker repository
      yum_repository:
        enabled: True
        name: docker-ce
        baseurl: https://download.docker.com/linux/centos/7/x86_64/stable/
        gpgcheck: False
        repo_gpgcheck: False
        description: |
          Stable Docker repository
    - name: Install docker
      yum:
        state: present
        name: "{{ packages }}"
      vars:
        packages:
          - docker-ce-19.03.4
          - docker-ce-cli-19.03.4
          - containerd.io
    - name: Create Docker configuration directory
      file:
        state: directory
        path: /etc/docker
        mode: "0755"
    - name: Configure docker
      template:
        src: "templates/daemon.json.j2"
        dest: "/etc/docker/daemon.json"
        mode: "0644"
      notify: "docker - reload"
    - name: Start docker
      systemd:
        name: docker
        state: started
        enabled: True
  handlers:
    - name: docker - reload
      systemd:
        name: docker
        state: restarted

- hosts: node
  become: True
  gather_facts: False
  any_errors_fatal: True
  tags:
    - kubernetes
  tasks:
    - name: Install kubernetes repository
      yum_repository:
        name: kubernetes
        # Prevents kubernetes unwanted updates
        enabled: False
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        repo_gpgcheck: True
        gpgcheck: True
        gpgkey:
          - https://packages.cloud.google.com/yum/doc/yum-key.gpg
          - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        description: |
          Kubernetes repository
    - name: Install k8s binaries
      yum:
        state: present
        name: "{{ packages }}"
        enablerepo: kubernetes
      vars:
        packages:
          - kubeadm
          - kubelet
    - name: Enable and start kubelet
      systemd:
        name: kubelet
        state: started
        no_block: True
        enabled: True
    - name: Enable bridge netfilter kernel module
      modprobe:
        state: present
        name: br_netfilter
    - name: Enable bridge iptable processing
      sysctl:
        name: "{{ item }}"
        state: present
        value: "1"
        sysctl_set: True
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
    - name: Disable swap
      command: swapoff -a

- hosts: master
  become: True
  gather_facts: True
  any_errors_fatal: True
  tags:
    - kubernetes
    - kubeadm
    - k8s-control-plane
  tasks:
    - name: Configure firewall
      iptables:
        action: insert
        rule_num: 1
        chain: INPUT
        comment: "k8s master input"
        destination_port: "{{ item }}"
        jump: ACCEPT
        protocol: tcp
        state: present
      loop:
        - "6443"
        - "2379:2380"
        - "10250:10252"
    - name: Create kubernetes config folder
      file:
        state: directory
        path: /etc/kubernetes
        mode: "0755"
    - name: Copy kubeadm configuration
      template:
        src: "templates/kubeadm-config.yml.j2"
        dest: "/etc/kubernetes/kubeadm-config.yml"
        mode: "0600"
    - name: Initialize first master
      run_once: True
      block:
        - name: Run init
          command: >
            kubeadm init --config /etc/kubernetes/kubeadm-config.yml
            --skip-certificate-key-print --skip-token-print
          args:
            creates: /etc/kubernetes/admin.conf
      rescue:
        - name: Reset node
          command: >
            kubeadm reset -f

- hosts: revoked_node
  become: True
  any_errors_fatal: True
  tags:
    - kubernetes
    - k8s-reset-node
  tasks:
    - name: Reset node
      command: >
        kubeadm reset -f

- hosts: master
  become: True
  gather_facts: True
  any_errors_fatal: True
  tags:
    - kubernetes
    - k8s-control-plane
    - k8s-join-master
  tasks:
    - name: Generate a join token
      run_once: True
      command: >
        kubeadm token create --kubeconfig /etc/kubernetes/admin.conf --print-join-command --ttl {{ k8s_join_token_ttl }} --usages=authentication,signing
      register: k8s_master_join_command
      no_log: True
    - name: Generate random key
      run_once: True
      delegate_to: localhost
      shell: >
        cat /dev/urandom | tr -dc 'A-F0-9' | fold -w 32 | head -n 1
      register: k8s_certificate_upload_key
      no_log: True
    - name: Upload certificates
      run_once: True
      command: >
        kubeadm init phase upload-certs --upload-certs
        --certificate-key {{ k8s_certificate_upload_key.stdout }}
        --skip-certificate-key-print
    - name: Join other masters
      block:
        - name: Run join command
          command: >
            {{ k8s_master_join_command.stdout }}
            --apiserver-advertise-address {{ hostvars[inventory_hostname]['ansible_' + k8s_apiserver_iface].ipv4.address }}
            --control-plane --certificate-key {{ k8s_certificate_upload_key.stdout }}
          args:
            creates: /etc/kubernetes/admin.conf
      rescue:
        - name: Reset node
          command: >
            kubeadm reset -f

- hosts: master
  become: True
  gather_facts: False
  any_errors_fatal: True
  tags:
    - kubernetes
    - flannel
    - k8s-cni-plugin
  tasks:
    - name: Create addons directory
      file:
        state: directory
        path: "/etc/kubernetes/addons"
        mode: "0755"
    - name: Upload flannel descriptor
      template:
        src: "templates/kube-flannel.yml.j2"
        dest: "/etc/kubernetes/addons/kube-flannel.yml"
        mode: "0600"
    - name: Apply flannel configuration
      run_once: True
      command: >
        kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f /etc/kubernetes/addons/kube-flannel.yml
      args:
        creates: /run/flannel/subnet.env
